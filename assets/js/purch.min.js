class Detail{constructor(e,t){this.product=e,this.reason=t}}class UI{static displayCosts(){Store.getCosts().forEach(e=>UI.addExpenseToList(e))}static addExpenseToList(e){const t=document.querySelector(".disp"),o=document.createElement("tr");o.innerHTML=`\n      <td>${e.product}</td>\n      <td>${e.reason}</td>\n      <td><a href="#" class="btn delete">X</a></td>`,t.appendChild(o)}static deleteBook(e){e.classList.contains("delete")&&e.parentElement.parentElement.remove()}static showAlert(e,t){const o=document.createElement("div");o.className="alert alert-"+t,o.appendChild(document.createTextNode(e));const s=document.querySelector(".container--main"),r=document.querySelector(".disp");s.insertBefore(o,r),setTimeout(()=>document.querySelector(".alert").remove(),3e3)}static clearFields(){document.querySelector("#product").value="",document.querySelector("#reason").value=""}}class Store{static getCosts(){let e;return e=null===localStorage.getItem("towel")?[]:JSON.parse(localStorage.getItem("towel")),e}static addCosts(e){const t=Store.getCosts();t.push(e),localStorage.setItem("towel",JSON.stringify(t))}static removeBook(e){const t=Store.getCosts();t.forEach((o,s)=>{o.reason===e&&(console.log(o.reason),t.splice(s,1))}),localStorage.setItem("towel",JSON.stringify(t))}}document.addEventListener("DOMContentLoaded",UI.displayCosts()),document.getElementById("buy").addEventListener("submit",e=>{e.preventDefault();const t=document.querySelector("#product").value,o=document.querySelector("#reason").value;if(""===t)alert("Product is not filled");else{const e=new Detail(t,o);UI.addExpenseToList(e),Store.addCosts(e),UI.clearFields()}}),document.querySelector(".disp").addEventListener("click",e=>{UI.deleteBook(e.target),Store.removeBook(e.target.parentElement.previousElementSibling.textContent)});